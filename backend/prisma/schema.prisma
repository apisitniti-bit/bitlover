// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// User model for authentication
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  portfolios   Portfolio[]
  watchlists   Watchlist[]
  priceAlerts  PriceAlert[]
  userSettings UserSettings?
}

// Portfolio model
model Portfolio {
  id          String   @id @default(uuid())
  userId      String
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  assets       Asset[]
  transactions Transaction[]
}

// Asset model - represents holdings in portfolio
model Asset {
  id            String   @id @default(uuid())
  portfolioId   String
  symbol        String
  name          String
  quantity      Float
  purchasePrice Float
  purchaseDate  DateTime @default(now())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  portfolio Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)

  @@index([portfolioId])
  @@index([symbol])
}

// Transaction model - buy/sell records
model Transaction {
  id          String   @id @default(uuid())
  portfolioId String
  type        String // 'BUY' or 'SELL'
  symbol      String
  quantity    Float
  price       Float
  fee         Float    @default(0)
  timestamp   DateTime @default(now())
  notes       String?
  createdAt   DateTime @default(now())

  portfolio Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)

  @@index([portfolioId])
  @@index([symbol])
  @@index([timestamp])
}

// Watchlist model
model Watchlist {
  id      String   @id @default(uuid())
  userId  String
  symbol  String
  name    String
  addedAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, symbol])
  @@index([userId])
}

// Price Alert model
model PriceAlert {
  id          String   @id @default(uuid())
  userId      String
  symbol      String
  targetPrice Float
  condition   String // 'ABOVE' or 'BELOW'
  isActive    Boolean  @default(true)
  isTriggered Boolean  @default(false)
  createdAt   DateTime @default(now())
  triggeredAt DateTime?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([symbol])
  @@index([isActive])
}

// User Settings model
model UserSettings {
  id            String   @id @default(uuid())
  userId        String   @unique
  theme         String   @default("dark")
  currency      String   @default("USD")
  notifications Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
